// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"github.com/google/wire"
	"go-gin-gorm-wire/app/controller"
	"go-gin-gorm-wire/app/module"
	"go-gin-gorm-wire/app/repository"
	"go-gin-gorm-wire/app/service"
)

// Injectors from injector.go:

func Init() *Initialization {
	gormDB := ConnectToDB()
	userRepositoryImpl := repository.UserRepositoryInit(gormDB)
	userServiceImpl := service.UserServiceInit(userRepositoryImpl)
	userControllerImpl := controller.UserControllerInit(userServiceImpl)
	userModule := module.UserModule{
		Ctrl: userControllerImpl,
		Svc:  userServiceImpl,
		Repo: userRepositoryImpl,
	}
	roleRepositoryImpl := repository.RoleRepositoryInit(gormDB)
	roleServiceImpl := service.RoleServiceInit(roleRepositoryImpl)
	roleControllerImpl := controller.RoleControllerInit(roleServiceImpl)
	roleModule := module.RoleModule{
		Ctrl: roleControllerImpl,
		Svc:  roleServiceImpl,
		Repo: roleRepositoryImpl,
	}
	authServiceImpl := service.AuthServiceInit(userRepositoryImpl)
	authControllerImpl := controller.AuthControllerInit(authServiceImpl)
	authModule := module.AuthModule{
		Ctrl: authControllerImpl,
		Svc:  authServiceImpl,
	}
	initialization := NewInitialization(userModule, roleModule, authModule)
	return initialization
}

// injector.go:

var db = wire.NewSet(ConnectToDB)
